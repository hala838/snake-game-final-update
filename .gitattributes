import tkinter as tk
import random

ROWS = 25
COLS = 25
TILE_SIZE = 25

WINDOW_WIDTH = TILE_SIZE * ROWS
WINDOW_HEIGHT = TILE_SIZE * COLS


class Tile:
    def __init__(self, x, y):
        self.x = x
        self.y = y


window = tk.Tk()
window.title("Snake")
window.resizable(False, False) 

canvas = tk.Canvas(window, bg="black", width=WINDOW_WIDTH, height=WINDOW_HEIGHT, borderwidth=0,
                        highlightthickness=0)
canvas.pack()
window.update()

window_width = window.winfo_width()
window_height = window.winfo_height()
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

window_x = int((screen_width / 2) - (window_width / 2))
window_y = int((screen_height / 2) - (window_height / 2))

window.geometry(f"{window_width}x{window_height}+{window_x}+{window_y}")

snake = Tile(5 * TILE_SIZE, 5 * TILE_SIZE)
food = Tile(10 * TILE_SIZE, 10 * TILE_SIZE)
snake_body = []
velocityX = 0
velocityY = 0
game_over = False
score = 0


def change_direction(e):
    global velocityX, velocityY
    if (game_over):
        if (e.keysym == "space"):
            restart_game()
        return

    if (e.keysym == "Up" and velocityY != 1):
        velocityX = 0
        velocityY = -1
    elif (e.keysym == "Down" and velocityY != -1):
        velocityX = 0
        velocityY = 1
    elif (e.keysym == "Left" and velocityX != 1):
        velocityX = -1
        velocityY = 0
    elif (e.keysym == "Right" and velocityX != -1):
        velocityX = 1
        velocityY = 0


def move():
    global snake, food, snake_body, game_over, score
    if (game_over):
        return

    new_x = snake.x + velocityX * TILE_SIZE
    new_y = snake.y + velocityY * TILE_SIZE

    if (new_x < 0 or new_x >= WINDOW_WIDTH or new_y < 0 or new_y >= WINDOW_HEIGHT):
        game_over = True
        return

    for tile in snake_body:
        if (new_x == tile.x and new_y == tile.y):
            game_over = True
            return

    if (new_x == food.x and new_y == food.y):
        snake_body.append(Tile(food.x, food.y))
        food.x = random.randint(0, COLS - 1) * TILE_SIZE
        food.y = random.randint(0, ROWS - 1) * TILE_SIZE
        score += 1
    for i in range(len(snake_body) - 1, -1, -1):
        tile = snake_body[i]
        if (i == 0):
            tile.x = snake.x
            tile.y = snake.y
        else:
            prev_tile = snake_body[i - 1]
            tile.x = prev_tile.x
            tile.y = prev_tile.y

    snake.x = new_x
    snake.y = new_y


def draw():
    global snake, food, snake_body, game_over, score 
    move()

    canvas.delete("all")

    canvas.create_rectangle(food.x, food.y, food.x + TILE_SIZE, food.y + TILE_SIZE, fill="red")

    canvas.create_rectangle(snake.x, snake.y, snake.x + TILE_SIZE, snake.y + TILE_SIZE, fill="lime green")

    for tile in snake_body:
        canvas.create_rectangle(tile.x, tile.y, tile.x + TILE_SIZE, tile.y + TILE_SIZE, fill="lime green")

    if (game_over):
        canvas.create_text(WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2, font="Arial 20", text=f" Game Over: {score}\nPress Space to restart",
                           fill="white")
    else:
        canvas.create_text(30, 20, font="Arial 10 ", text=f"Score: {score}", fill="white")

    window.after(100, draw)


def restart_game():
    global snake, food, snake_body, velocityX, velocityY, game_over, score
    snake = Tile(5 * TILE_SIZE, 5 * TILE_SIZE)
    food_x = random.randint(0, COLS - 1) * TILE_SIZE
    food_y = random.randint(0, ROWS - 1) * TILE_SIZE
    food = Tile(food_x, food_y)
    snake_body = []
    velocityX = 0
    velocityY = 0
    game_over = False
    score = 0

   
window.bind("<Key>", change_direction)
draw()
window.mainloop()

